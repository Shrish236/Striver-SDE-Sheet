Leetcode link: https://leetcode.com/problems/maximum-depth-of-binary-tree/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        queue<pair<int, TreeNode*>> q;
        if(root==NULL){
            return 0;
        }
        q.push({1, root});
        int max_level = 0;
        while(!q.empty()){
            int level = q.front().first;
            TreeNode* temp = q.front().second;
            q.pop();
            if(temp->left!=NULL){
                q.push({level+1, temp->left});
            }
            if(temp->right!=NULL){
                q.push({level+1, temp->right});
            }
            max_level = max(max_level, level);
        }
        return max_level;
    }
};