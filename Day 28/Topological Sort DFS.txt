GFG link: https://practice.geeksforgeeks.org/problems/topological-sort/1

class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	void dfs(int node, vector<int> adj[], stack<int> &st, vector<int> &vis){
	    vis[node] = 1;
	    for(auto it: adj[node]){
	        if(!vis[it]){
	            dfs(it, adj, st, vis);
	        }
	    }
	    st.push(node);
	}
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    stack<int> st;
	    vector<int> vis(V, 0);
	    for(int i = 0; i<V; i++){
	        if(!vis[i]){
	            dfs(i, adj, st, vis);
	        }
	    }
	    
	    vector<int> ans;
	    for(int i = 0; i<V; i++){
	        ans.push_back(st.top());
	        st.pop();
	    }
	    return ans;
	}
};