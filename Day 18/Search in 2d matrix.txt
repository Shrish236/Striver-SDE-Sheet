Leetcode link: https://leetcode.com/problems/search-a-2d-matrix/

class Solution {
public:
    bool searchMatrix(vector<vector<int>>& matrix, int target) {
        int m = matrix.size();
        int n = matrix[0].size();
        int r_low = 0;
        int r_high = m-1;
        int c_low = 0;
        int c_high = n-1;
        while(r_low <= r_high){
            int r_mid = r_low + (r_high - r_low)/2;
            if(matrix[r_mid][0]<=target && matrix[r_mid][n - 1]>=target){
                cout<<"Hi";
                while(c_low <= c_high){
                    int c_mid = c_low + (c_high - c_low)/2;
                    if(matrix[r_mid][c_mid] == target){
                        return true;
                    }
                    if(target < matrix[r_mid][c_mid]){
                        c_high = c_mid-1;
                    }
                    else{
                        c_low = c_mid+1;
                    }
                }
                    return false;
            }
            else if(target > matrix[r_mid][n - 1]){
                r_low = r_mid+1;
            }
            else if(target < matrix[r_mid][0]){
                r_high = r_mid-1;
            }
        }
        return false;
    }
};