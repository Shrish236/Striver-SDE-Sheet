Coding Ninjas link: https://www.codingninjas.com/studio/problems/1062670

#include "bits/stdc++.h"
bool detect(int src, vector<int> &vis, vector<int> adj[]){
    queue<pair<int, int>> q;
    q.push({src, -1});
    vis[src] = 1;
    while(!q.empty()){
        int node = q.front().first;
        int parent = q.front().second;
        q.pop();
        for(auto a: adj[node]){
            if(!vis[a]){
                vis[a]=1;
                q.push({a, node});
            }
            else if(a!=parent){
                return true;
            }
        }
    }
    return false;
}
string cycleDetection (vector<vector<int>>& edges, int n, int m)
{
    // Write your code here.
    vector<int> adj[n+1];
    for(int i = 0; i<edges.size(); i++){
        adj[edges[i][0]].push_back(edges[i][1]);
        adj[edges[i][1]].push_back(edges[i][0]);
    }
    vector<int> vis(n+1, 0);
    for(int i = 1; i<=n; i++){
        if(!vis[i]){
            if(detect(i, vis, adj)){
                return "Yes";
            }
        }
    }
    return "No";
    

}