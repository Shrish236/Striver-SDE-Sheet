Leetcode link: https://leetcode.com/problems/course-schedule/

class Solution {
public:
    
    bool detect(int node, vector<int> &vis, vector<int> adj[], vector<int> &pathvis){
        vis[node] = 1;
        pathvis[node] = 1;
        for(auto it: adj[node]){
            if(!vis[it]){
                if(detect(it, vis, adj, pathvis)){
                    return true;
                }
            }
            else if(pathvis[it]==1){
                return true;
            }
        }
        pathvis[node] = 0;
        return false;
    }
    bool canFinish(int n, vector<vector<int>>& edges) {
       vector<int> adj[n];
        for(int i = 0; i<edges.size(); i++){
            adj[edges[i][0]].push_back(edges[i][1]);
        }
        vector<int> vis(n, 0);
        vector<int> pathvis(n, 0);
        for(int i = 0; i<n; i++){
            if(!vis[i]){
                if(detect(i, vis, adj, pathvis)){
                    return false;
                }
            }
        }
        return true; 
    }

};