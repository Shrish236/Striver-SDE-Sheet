Leetcode link: https://leetcode.com/problems/compare-version-numbers/

class Solution {
public:
    
    int compare(int num1, int num2){
        if(num1<num2){
            return -1;
        }
        else if(num1>num2){
            return 1;
        }
        return 0;
    }
    int compareVersion(string version1, string version2) {
        int n = version1.length();
        int m = version2.length();
        int i = 0; 
        int j = 0;
        int num1 = 0, num2 = 0; 
        while(i<n && j<m){
            if(version1[i]!='.'){
                if(num1==0 && version1[i]==0){
                    i++;
                }
                else{
                    num1*=10;
                    num1 += version1[i] - '0';
                    i++;
                }
            }
            if(version2[j]!='.'){
                if(num2==0 && version2[j]==0){
                    j++;
                }
                else{
                    num2*=10;
                    num2 += version2[j] - '0';
                    j++;
                }
            }
            if(version1[i]=='.' && version2[j]=='.'){
                int ans = compare(num1, num2);
                if(!ans){
                    num1 = 0;
                    num2 = 0;
                    i++;
                    j++;
                }
                else{
                    return ans;
                }
            }
        }
        if(i==n){
            while(j<m && version2[j]!='.'){
                if(num2==0 && version2[j]==0){
                    j++;
                }
                else{
                    num2*=10;
                    num2 += version2[j] - '0';
                    j++;
                }
            }
            int ans = compare(num1, num2);
            if(ans){ return ans; }
            while(j!=m){
                j++;
                num2=0;
                while(j<m && version2[j]!='.'){
                    if(num2==0 && version2[j]==0){
                        j++;
                    }
                    else{
                        num2*=10;
                        num2 += version2[j] - '0';
                        j++;
                    }
                }
                if(num2!=0){
                    return -1;
                }
            }
        }
        else if(j==m){
            while(i<n && version1[i]!='.'){
                if(num1==0 && version1[i]==0){
                    i++;
                }
                else{
                    num1*=10;
                    num1 += version1[i] - '0';
                    i++;
                }
            }
            int ans = compare(num1, num2);
            if(ans){ return ans; }
            while(i!=n){
                i++;
                num1=0;
                while(i<n && version1[i]!='.'){
                    if(num1==0 && version1[i]==0){
                        i++;
                    }
                    else{
                        num1*=10;
                        num1 += version1[i] - '0';
                        i++;
                    }
                }
                if(num1!=0){
                    return 1;
                }
            }
        }
        return 0;
    }
};