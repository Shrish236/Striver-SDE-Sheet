Leetcode link: https://leetcode.com/problems/vertical-order-traversal-of-a-binary-tree/

Referred Striver's solution: https://www.youtube.com/watch?v=q_a6lpbKJdw

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        queue<pair<int, pair<TreeNode*, int>>> q;
        map<int, map<int, vector<int>>> mp;
        q.push({0, {root, 0}});
        while(!q.empty()){
            int line = q.front().first;
            TreeNode* temp = q.front().second.first;
            int level = q.front().second.second;
            q.pop();
            mp[line][level].push_back(temp->val);
            if(temp->left!=NULL){
                q.push({line-1, {temp->left, level+1}});
            }
            if(temp->right!=NULL){
                q.push({line+1, {temp->right, level+1}});
            }
        }
        vector<vector<int>> ans;
        for(auto it:mp){
            vector<int> temp;
            for(auto k: it.second){
                sort(k.second.begin(), k.second.end());
                for(auto a: k.second){
                    temp.push_back(a);
                }
            }
            ans.push_back(temp);
            
        }
        return ans;
    }
};