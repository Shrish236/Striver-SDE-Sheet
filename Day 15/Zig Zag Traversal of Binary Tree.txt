Leetcode link: https://leetcode.com/problems/binary-tree-zigzag-level-order-traversal/

/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        queue<pair<int, TreeNode*>> q;
        if(root==NULL){
            return ans;
        }
        q.push({0, root});
        while(!q.empty()){
            int n = q.size();
            int level = q.front().first;
            vector<int> res;
            for(int i = 0; i<n; i++){
                TreeNode* temp = q.front().second;
                q.pop();
                res.push_back(temp->val);
                if(temp->left!=NULL){
                    q.push({level+1, temp->left});
                }
                if(temp->right!=NULL){
                    q.push({level+1, temp->right});
                }
            }
            if(level%2==1){
                reverse(res.begin(), res.end());
            }
            ans.push_back(res);
        }
        return ans;
    }
};