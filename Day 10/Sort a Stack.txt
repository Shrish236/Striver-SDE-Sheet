GFG link: https://practice.geeksforgeeks.org/problems/sort-a-stack/1

//{ Driver Code Starts
#include<bits/stdc++.h>
using namespace std;

class SortedStack{
public:
	stack<int> s;
	void sort();
};

void printStack(stack<int> s)
{
    while (!s.empty())
    {
        printf("%d ", s.top());
       	s.pop();
    }
    printf("\n");
}

int main()
{
int t;
cin>>t;
while(t--)
{
	SortedStack *ss = new SortedStack();
	int n;
	cin>>n;
	for(int i=0;i<n;i++)
	{
	int k;
	cin>>k;
	ss->s.push(k);
	}
	ss->sort();
	printStack(ss->s);
}
}
// } Driver Code Ends


/*The structure of the class is
class SortedStack{
public:
	stack<int> s;
	void sort();
};
*/

/* The below method sorts the stack s 
you are required to complete the below method */
void sortStack(stack<int> &st, int val){
    if(!st.empty()){
        int temp = st.top();
        st.pop();
        if(temp<=val){
            sortStack(st, temp);
            st.push(val);
        }
        else{
            sortStack(st, val);
            st.push(temp);
        }
    }
    else{
        st.push(val);
    }
}
void SortedStack :: sort()
{
   //Your code here
   if(!s.empty()){
       for(int i = 0; i<s.size(); i++){
           int val = s.top();
           s.pop();
           sortStack(s, val);
       }
   }
   
}