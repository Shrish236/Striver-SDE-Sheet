Leetcode link: https://leetcode.com/problems/next-greater-element-i/

class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size();
        int n = nums2.size();
        stack<int> st;
        unordered_map<int, int> umap;
        for(int i = 0; i<m; i++){
            umap[nums1[i]] = -1;
        }
        for(int i = 0; i<n; i++){
            st.push(nums2[i]);
        }
        int nextEle = -1;
        for(int i = n-1; i>=0; i--){
            int val = nums2[i];
            if(umap.find(val)!=umap.end()){
                while(st.top()!=val){
                    if(val==1){
                        cout<<st.top();
                    }
                    if(st.top()>val){
                        nextEle = st.top();
                    }
                    st.pop();
                }
                if(nextEle > val){
                    umap[val] = nextEle;
                }
                else{
                    for(int j = i+1; j<n; j++){
                        if(umap[nums2[j]]>val){
                            umap[val] = umap[nums2[j]];
                            break;
                        }
                    }
                }
            }    
        }
        vector<int> ans;
        for(int i = 0; i<m; i++){
            ans.push_back(umap[nums1[i]]);
        }
        return ans;
    }
};

Referred solution from: https://leetcode.com/problems/next-greater-element-i/discuss/671261/C%2B%2B-or-Map-%2B-Stack-or-Commented

class Solution {
public:
    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {
        int m = nums1.size();
        int n = nums2.size();
        stack<int> st;
        unordered_map<int, int> umap;
        for(int i = 0; i<n; i++){
            
            while(!st.empty() && nums2[i]>st.top()){
                umap[st.top()]=nums2[i];
                st.pop();
            }
            st.push(nums2[i]);
            
        }
        vector<int> ans;
        for(int i = 0; i<m; i++){
            if(umap.find(nums1[i])!=umap.end()){
                ans.push_back(umap[nums1[i]]);
            }
            else{
                ans.push_back(-1);
            }
        }
        return ans;
    }
};

