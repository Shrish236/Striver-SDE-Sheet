Leetcode link: https://leetcode.com/problems/implement-queue-using-stacks/

class MyQueue {
public:
    stack<int> s1;
    stack<int> s2;
    int another = false;
    MyQueue() {
        
    }
    
    void push(int x) {
        s1.push(x);
    }
    
    int pop() {
        int val = 0;
        if(!another){
            int n = s1.size();
            for(int i = 0; i<n; i++){
                int temp = s1.top();
                s1.pop();
                s2.push(temp);
            }
            val = s2.top();
            s2.pop();
            if(s2.size()!=0){
                another=true;
            }
        }
        else{
            val = s2.top();
            s2.pop();
            if(s2.size()==0){
                another=false;
            }
        }
        return val;
    }
    
    int peek() {
        int val = 0;
        if(!another){
            int n = s1.size();
            for(int i = 0; i<n; i++){
                int temp = s1.top();
                s1.pop();
                s2.push(temp);
            }    
            val = s2.top();
            another=true;
        }
        else{
            val = s2.top();
        }
        return val;
    }
    
    bool empty() {
        if(s1.size() == 0 && s2.size()==0){
            return true;
        }
        return false;
    }
};

/**
 * Your MyQueue object will be instantiated and called as such:
 * MyQueue* obj = new MyQueue();
 * obj->push(x);
 * int param_2 = obj->pop();
 * int param_3 = obj->peek();
 * bool param_4 = obj->empty();
 */