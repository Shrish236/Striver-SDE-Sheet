Roman to Integer:

Leetcode Link: https://leetcode.com/problesms/roman-to-integer/

class Solution {
public:
    int romanToInt(string s) {
        
        int n = s.length();
        unordered_map<string, int> umap;
        umap["I"] = 1;
        umap["V"] = 5;
        umap["X"] = 10;
        umap["L"] = 50;
        umap["C"] = 100;
        umap["D"] = 500;
        umap["M"] = 1000;
        umap["IV"] = 4;
        umap["IX"] = 9;
        umap["XL"] = 40;
        umap["XC"] = 90;
        umap["CD"] = 400;
        umap["CM"] = 900;
        
        int sum = 0;
        for(int i = 0; i<n; i++){
            string temp;
            temp.push_back(s[i]);
            if(s[i] == 'D' || s[i] == 'M' || s[i] == 'L' || s[i] == 'V'){
                sum+=umap[temp];
            }
            else{
                if(i+1 < n){
                    temp.push_back(s[i+1]);
                    if(umap.find(temp)!=umap.end()){
                        sum+=umap[temp];
                        temp.pop_back();
			i++;
                    }
                    else{
                        temp.pop_back();
                        sum+=umap[temp];
                    }
                }
                else{
                    sum+=umap[temp];
                }
            }
            temp.pop_back();
        }
        return sum;
        
    }
};

Integer to Roman:

Leetcode link: https://leetcode.com/problems/integer-to-roman/

class Solution {
public:
    string intToRoman(int num) {
        unordered_map<int, string> umap;
        umap[1] = "I";
        umap[4] = "IV";
        umap[5] = "V";
        umap[9] = "IX";
        umap[10] = "X";
        umap[40] = "XL";
        umap[50] = "L";
        umap[90] = "XC";
        umap[100] = "C";
        umap[400] = "CD";
        umap[500] = "D";
        umap[900] = "CM";
        umap[1000] = "M";
        
        string temp = to_string(num);
        int var = pow(10, temp.length()-1);
        cout<<temp;
        int i = 0;
        string ans;
        while(i < temp.length()){
            int rem  = temp[i]-'0';
            rem = rem*var;
            if(umap.find(rem)!=umap.end()){
                ans+=umap[rem];
            }
            else{
                if(rem % (9*var) == 0){
                    ans+=umap[rem];
                }
                else if(rem >= (5*var)){
                    ans+=umap[5*var];
                    rem = rem%(5*var);
                    rem = rem/var;
                    for(int j = 0; j<rem; j++){
                        ans+=umap[var];
                    }
                }
                else if(rem%(4*var) == 0){
                    ans+=umap[rem];
                }
                else{
                    rem = rem/var;
                    for(int j = 0; j<rem; j++){
                        ans+=umap[var];
                    }
                }
            }
            i++;
            var/=10;
        }
        return ans;
    }
};